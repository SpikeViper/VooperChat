@inject HttpClient Http
@inject NavigationManager navManager
@inject WindowManager windowManager

@if (ValourClient.Self is null){
    <h2>Sign in!</h2>
    return;
}

<div class="col-md-12 modal-bg">
	<section style="text-align: center;">
		<h2>Create a new App</h2>

		<h4>Developers rejoice!</h4>
		
		<hr />

		<div asp-validation-summary="All" class="text-info"></div>

		<div class="form-group mt-4">
			<label>Application Name</label>
			<input class="form-control" @bind-value="@name" type='' />
			<span id="name-span" style="color:#888888">@nameSpan</span>
		</div>

        <div class="form-group mt-4">
			<button class="btn v-button mt-2" @onclick="OnClickSubmit">Submit</button>
		</div>
	</section>
</div>

@code {
	// Input fields
	string name;
	// Spans
	string nameSpan = "The name of your application";

	[CascadingParameter]
	public BlazoredModalInstance Instance { get; set; }

	private async Task OnClickSubmit(MouseEventArgs e)
	{
		// Require a name
		if (string.IsNullOrWhiteSpace(name))
		{
			name = "Please input an application name.";
			return;
		}

		var new_app = new OauthApp()
		{
			Name = name,
            ImageUrl = "media/logo/logo-512.png",
            OwnerId = ValourClient.Self.Id,
            Uses = 0
		};

		var response = await ValourClient.PrimaryNode.PostAsyncWithResponse<long>($"api/oauth/app", new_app);
        
        if (!response.Success){
            nameSpan = response.Message;
            StateHasChanged();
            return;
        }

		long app_id = response.Data;

		nameSpan = "App created.";

        ////////////////////////////////

		var app = OauthApp.FindAsync(app_id);

		if (app is null)
		{
			Console.WriteLine($"Failed to retrieve app {app_id}");
			nameSpan = "Created app, but an error occured retrieving it. Please refresh.";
            StateHasChanged();
			return;
		}


		// Go to app page
		//navManager.NavigateTo($"/oauth/apps/{app_id}", true);

		await Instance.CloseAsync();
    }

}