@inherits Modal<AttachmentModal.ModalParams>
@inject IJSRuntime JsRuntime

@if (Data.Attachment is null)
{
    <h5>Loading content...</h5>
    return;
}

<div class="preview-container">
    <div class="attachment-holder">
        @switch (Data.Attachment.Type){
            case MessageAttachmentType.Image:
                <ImageAttachmentComponent Attachment="Data.Attachment" Clickable="false" MaxSize="1000" DoAspect="false" />
                break;
            case MessageAttachmentType.Video:
                <VideoAttachmentComponent Attachment="Data.Attachment" />
                break;
            case MessageAttachmentType.Audio:
                <AudioAttachmentComponent Attachment="Data.Attachment" />
                break;
            default:
                <FileAttachmentComponent Attachment="Data.Attachment" />
                break;
        }
    </div>
    
    <div class="d-flex flex-row justify-content-between">
        <button class="v-btn" style="float: right" @onclick="@OnClickClose">Close</button>
        <button class="v-btn" style="float: right" @onclick="@OnClickCopyLink">Copy Link</button>
        <button class="v-btn danger" @onclick="@OnClickDownload">Download</button>
    </div>
</div>

@code {

    public class ModalParams
    {
        public MessageAttachment Attachment;
    }
    
    private Task OnClickClose()
    {
        return CloseAsync();
    }
    
    private async Task OnClickCopyLink()
    {
        await JsRuntime.InvokeVoidAsync("clipboardCopy.copyText", Data.Attachment.Location);
    }

    private async Task OnClickDownload()
    {
        await JsRuntime.InvokeVoidAsync("open", Data.Attachment.Location, "_blank");
    }
}