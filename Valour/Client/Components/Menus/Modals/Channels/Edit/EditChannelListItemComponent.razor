@inherits Modal<EditChannelListItemComponent.ModalParams>
@implements IDisposable

<BigMenuComponent @ref="BigMenu">
    <LeftSide>
        <EditChannelListItemMenuComponent ChannelListItem="@Data.ChannelListItem"></EditChannelListItemMenuComponent>
    </LeftSide>
    <RightSide>
        @switch (BigMenu.SelectedTopLevelMenu?.Name)
        {
            case "General Settings":
                switch (BigMenu.SelectedSubMenu.Name)
                {
                    case "Info":
                        <EditCLIDetailsComponent Channel="@Data.ChannelListItem"></EditCLIDetailsComponent>
                        break;
                    case "Permissions":
                        <EditCLIPermissionsComponent Target="@Data.ChannelListItem"></EditCLIPermissionsComponent>
                        break;
                }
                break;
        }
    </RightSide>
</BigMenuComponent>

@code {

    public class ModalParams
    {
        public Channel ChannelListItem;
    }

    private BigMenuComponent BigMenu { get; set; }

    public void Dispose()
    {
        BigMenu.RefreshRightSide -= Refresh;
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            BigMenu.RefreshRightSide += Refresh;
        }
        return base.OnAfterRenderAsync(firstRender);
    }

    private void Refresh()
    {
        StateHasChanged();
    }
    
}