@using Valour.Shared.Models;
@using Valour.Sdk.Client

<div class="@Class" style="color: @Role_Color" @onclick="ShowProfileAsync">
    @if (Member == null)
    {
        <div>@@NotFound</div>
    }
    else
    {
        <div>@@@Member.Nickname</div>
    }
</div>

@code {

    public string Class
    {
        get
        {
            if (Member == null || Member.UserId != ValourClient.Self.Id)
            {
                return "mention";
            }
            else
            {
                return "mention target";
            }
        }
    }

    [CascadingParameter]
    public Channel Channel { get; set; }

    [Parameter]
    public Mention Mention { get; set; }

    public PlanetMember Member { get; set; }

    public string Role_Color = "#ffffff";

    protected async override Task OnInitializedAsync()
    {
        await Build();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Member != null)
        {
            if (Mention.TargetId != Member.Id)
            {
                await Build();
            }
        }
        else
        {
            await Build();
        }
    }

    public async Task Build()
    {
        if (Channel.PlanetId is not null)
        {
            Member = await PlanetMember.FindAsync(Mention.TargetId, Channel.PlanetId.Value);
        }
        
        if (Member != null)
        {
            Role_Color = await Member.GetRoleColorAsync();
        }
        else
        {
            Role_Color = "#ffffff";
        }

        StateHasChanged();
    }
    
    private async Task ShowProfileAsync(MouseEventArgs e)
    {
        if (Member is null)
            return;

        await ProfilePopup.Instance.OpenAsync(Member, (int)e.ClientX, (int)e.ClientY, "bottomRight");
    }
}
